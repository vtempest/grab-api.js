"use strict";(self.webpackChunkproject_api_docs=self.webpackChunkproject_api_docs||[]).push([["676"],{1081:function(e,n,a){a.r(n),a.d(n,{frontMatter:()=>w,default:()=>T,contentTitle:()=>q,assets:()=>R,toc:()=>S,metadata:()=>r});var r=JSON.parse('{"id":"guide/Examples","title":"Request Stategies","description":"Install & Import","source":"@site/docs/guide/Examples.md","sourceDirName":"guide","slug":"/guide/Examples","permalink":"/docs/guide/Examples","draft":false,"unlisted":false,"editUrl":"https://github.com/vtempest/grab-api.js/blob/main/docs/guide/Examples.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Request Stategies","sidebar_position":1},"sidebar":"default","next":{"title":"Comparisons","permalink":"/docs/guide/Comparisons"}}'),s=a(4132),t=a(65),i=a(9546),o=a(4461),l=a(9742),c=a(6936),u=a(6888),d=a(6249),p=a(6269),h=a(3337);function m(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function g(e){let{value:n,tabValues:a}=e;return a.some(e=>e.value===n)}var f=a(2940);function v(e){let{className:n,block:a,selectedValue:r,selectValue:t,tabValues:i}=e,c=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.o5)(),d=e=>{let n=e.currentTarget,a=i[c.indexOf(n)].value;a!==r&&(u(n),t(a))},p=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{let a=c.indexOf(e.currentTarget)+1;n=c[a]??c[0];break}case"ArrowLeft":{let a=c.indexOf(e.currentTarget)-1;n=c[a]??c[c.length-1]}}n?.focus()};return(0,s.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},n),children:i.map(e=>{let{value:n,label:a,attributes:t}=e;return(0,s.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{c.push(e)},onKeyDown:p,onClick:d,...t,className:(0,o.Z)("tabs__item","tabItem_uxnu",t?.className,{"tabs__item--active":r===n}),children:a??n},n)})})}function b(e){let{lazy:n,children:a,selectedValue:r}=e,t=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){let e=t.find(e=>e.props.value===r);return e?(0,i.cloneElement)(e,{className:(0,o.Z)("margin-top--md",e.props.className)}):null}return(0,s.jsx)("div",{className:"margin-top--md",children:t.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function x(e){let n=function(e){let{defaultValue:n,queryString:a=!1,groupId:r}=e,s=function(e){let{values:n,children:a}=e;return(0,i.useMemo)(()=>{let e=n??m(a).map(e=>{let{props:{value:n,label:a,attributes:r,default:s}}=e;return{value:n,label:a,attributes:r,default:s}}),r=(0,p.lx)(e,(e,n)=>e.value===n.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,a])}(e),[t,o]=(0,i.useState)(()=>(function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:a}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let r=a.find(e=>e.default)??a[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:n,tabValues:s})),[l,f]=function(e){let{queryString:n=!1,groupId:a}=e,r=(0,c.k6)(),s=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,d._X)(s),(0,i.useCallback)(e=>{if(!s)return;let n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})},[s,r])]}({queryString:a,groupId:r}),[v,b]=function(e){let{groupId:n}=e,a=n?`docusaurus.tab.${n}`:null,[r,s]=(0,h.Nk)(a);return[r,(0,i.useCallback)(e=>{a&&s.set(e)},[a,s])]}({groupId:r}),x=(()=>{let e=l??v;return g({value:e,tabValues:s})?e:null})();return(0,u.Z)(()=>{x&&o(x)},[x]),{selectedValue:t,selectValue:(0,i.useCallback)(e=>{if(!g({value:e,tabValues:s}))throw Error(`Can't select invalid tab value=${e}`);o(e),f(e),b(e)},[f,b,s]),tabValues:s}}(e);return(0,s.jsxs)("div",{className:(0,o.Z)("tabs-container","tabList_fvkS"),children:[(0,s.jsx)(v,{...n,...e}),(0,s.jsx)(b,{...n,...e})]})}function j(e){let n=(0,f.Z)();return(0,s.jsx)(x,{...e,children:m(e.children)},String(n))}function y(e){let{children:n,hidden:a,className:r}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,o.Z)("tabItem_T3ZT",r),hidden:a,children:n})}a(1511);let w={title:"Request Stategies",sidebar_position:1},q=void 0,R={},S=[{value:"Install &amp; Import",id:"install--import",level:3},{value:"Basic Request",id:"basic-request",level:3},{value:"Reactive Loading Status",id:"reactive-loading-status",level:3},{value:"Global Defaults Configuration",id:"global-defaults-configuration",level:3},{value:"Instance with Separate Defaults",id:"instance-with-separate-defaults",level:3},{value:"TypeScript ToolTips &amp; Error Check on Request &amp; Response",id:"typescript-tooltips--error-check-on-request--response",level:3},{value:"Pagination with Infinite Scroll",id:"pagination-with-infinite-scroll",level:3},{value:"Debounced Search",id:"debounced-search",level:3},{value:"Client Cache in User Memory",id:"client-cache-in-user-memory",level:3},{value:"Rate Limiting",id:"rate-limiting",level:3},{value:"Duplicate Cancellation",id:"duplicate-cancellation",level:3},{value:"Error Handling and Retry",id:"error-handling-and-retry",level:3},{value:"Request Hooks and Interceptors",id:"request-hooks-and-interceptors",level:3},{value:"Proxy",id:"proxy",level:3},{value:"File Upload",id:"file-upload",level:3},{value:"Command Line Usage Examples",id:"command-line-usage-examples",level:2},{value:"Mock Server for Testing",id:"mock-server-for-testing",level:3},{value:"Unit Tests with Jest",id:"unit-tests-with-jest",level:3}];function k(e){let n={code:"code",h2:"h2",h3:"h3",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"install--import",children:"Install & Import"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install grab-api.js\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"bun i grab-api.js\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import grab from "grab-api.js";\n'})}),"\n",(0,s.jsx)(n.h3,{id:"basic-request",children:"Basic Request"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Basic GET request\ngrab("user").then(log); // { id: 123, name: "John Doe", ... }\n\n// GET with query parameters\nconst searchResults = await grab("search", {\n  query: "javascript",\n  page: 1,\n  limit: 10,\n});\n\n// POST with body\nawait grab("users", {\n  post: true, //shorthand for method: "POST"\n  email: "jane@example.com",\n  age: 25,\n});\n'})}),"\n",(0,s.jsx)(n.h3,{id:"reactive-loading-status",children:"Reactive Loading Status"}),"\n",(0,s.jsxs)(j,{children:[(0,s.jsx)(y,{value:"react",label:"React",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import React, { useState } from "react";\nimport grab from "grab-api.js";\n\nfunction UserProfile() {\n  const [userState, setUserState] = useState<Partial<{ \n    name: string; \n    email: string;\n    isLoading: boolean;\n    error: string; \n  }>>({})\n\n  await grab(`user`, {\n    response: setUserState\n  });\n\n  return (\n    <div>\n      {userState.isLoading && <div>Loading...</div>}\n      {userState.error && <div>Error: {userState.error}</div>}\n      {userState && (\n        <div>\n          <h2>{userState.name}</h2>\n          <p>{userState.email}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n'})})}),(0,s.jsx)(y,{value:"svelte",label:"Svelte",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'<script>\n  import grab from \'grab-api.js\';\n\n\n  let searchResults = $state({\n    results: [],\n    isLoading: false,\n    error: null\n  });\n\n  async function searchProducts(query) {\n    await grab(\'products/search\', {\n      response: searchResults,\n      post: true,\n      query: query,\n      category: \'electronics\'\n    });\n  }\n<\/script>\n\n<input\n  type="text"\n  on:input={(e) => searchProducts(e.target.value)}\n  placeholder="Search products..."\n/>\n\n{#if searchResults.isLoading}\n  <div class="loading">Searching...</div>\n{:else if searchResults.error}\n  <div class="error">{searchResults.error}</div>\n{:else if searchResults.results}\n  <div class="results">\n    {#each searchResults.results as product}\n      <div class="product-card">\n        <h3>{product.name}</h3>\n        <p>${product.price}</p>\n      </div>\n    {/each}\n  </div>\n{/if}\n'})})}),(0,s.jsx)(y,{value:"vue3",label:"Vue 3",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'<template>\n  <div>\n    <input \n      v-model="searchTerm" \n      @input="searchUsers"\n      placeholder="Search users..."\n    />\n    <div v-if="userResults.isLoading" class="loading">\n      Loading users...\n    </div>\n    <div v-else-if="userResults.error" class="error">\n      {{ userResults.error }}\n    </div>\n    <div v-else class="user-list">\n      <div \n        v-for="user in userResults.users" \n        :key="user.id"\n        class="user-card"\n      >\n        {{ user.name }} - {{ user.email }}\n      </div>\n    </div>\n  </div>\n</template>\n<script setup>\nimport { ref, reactive } from \'vue\';\nimport grab from \'grab-api.js\';\nconst searchTerm = ref(\'\');\nconst userResults = reactive({\n  users: [],\n  isLoading: false,\n  error: null\n});\nconst searchUsers = async () => {\n  if (searchTerm.value.length < 2) return;\n  \n  await grab(\'users/search\', {\n    response: userResults,\n    query: searchTerm.value,\n    status: \'active\'\n  });\n};\n<\/script>\n'})})})]}),"\n",(0,s.jsx)(n.h3,{id:"global-defaults-configuration",children:"Global Defaults Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// set directly\ngrab.defaults.baseURL = "https://api.myapp.com/v1";\ngrab.defaults.headers = {\n  Authorization: "Bearer your-token-here",\n};\n\n// method 2: Set defaults for all requests\ngrab("", {\n  setDefaults: true,\n  baseURL: "https://api.myapp.com/v1",\n  timeout: 30, // 30 seconds\n  debug: true,\n  rateLimit: 1, // 1 second between requests\n  cache: false,\n  cancelOngoingIfNew: true,\n  headers: {\n    Authorization: "Bearer your-token-here",\n  },\n});\n\n'})}),"\n",(0,s.jsx)(n.h3,{id:"instance-with-separate-defaults",children:"Instance with Separate Defaults"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// separate defaults, headers, and interceptors for a third-party API\nconst grabGoogleAPI = grab.instance({\n  headers: { Authorization: "Bearer 9e9wjeffkwf0sf" },\n  baseURL: "https://api.google.com/v1/",\n  debug: true,\n});\nconst data = await grabGoogleAPI("/api/endpoint");\n\n// Options Order of Precedence: Request Call > Instance > User Globals > Package Defaults\n'})}),"\n",(0,s.jsx)(n.h3,{id:"typescript-tooltips--error-check-on-request--response",children:"TypeScript ToolTips & Error Check on Request & Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'type User = { \n  /** Name of the user  */ \n  name: string;\n  /** Age of the user  */ \n  age: number;\n};\n\ntype RequestParams = { \n  /** Query String  to search for */ \n  q : string;\n  /** Category of search  */\n  category?: "news" | "general";\n\n};\n\nconst result = await grab<User, RequestParams>(\'test-path\', {\n  q: " react",\n  category: "general"\n});\n\nlog(result.name)\n\n// instant error highlight and description tooltips over "category" and "name"\n\n'})}),"\n",(0,s.jsx)(n.h3,{id:"pagination-with-infinite-scroll",children:"Pagination with Infinite Scroll"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'let productList = $state({}) as {\n  products: Array<{name:string}>,\n  isLoading: boolean\n}\n\nawait grab("products", {\n  response: productList,\n  infiniteScroll: ["page", "products", ".results-container"]\n});\n\n<div class="results-container">\n  {productList.products.map(product => (\n    <div className="product-item">\n      <h3>{product.name}</h3>\n    </div>\n  ))}\n  {productList.isLoading && <div className="loading">Loading more products...</div>}\n</div>\n\n'})}),"\n",(0,s.jsx)(n.h3,{id:"debounced-search",children:"Debounced Search"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Utility function for debouncing\nfunction debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\n// Debounced search implementation\nconst debouncedSearch = debounce(async (query) => {\n  if (query.length < 2) return;\n\n  await grab("search", {\n    response: searchResults,\n    query: query,\n    cancelOngoingIfNew: true, // Cancel previous searches\n  });\n}, 300); // Wait 300ms after user stops typing\n\n// Usage in input handler\nfunction handleSearchInput(event) {\n  debouncedSearch(event.target.value);\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"client-cache-in-user-memory",children:"Client Cache in User Memory"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Enable caching for static data\nconst categories = await grab("categories", {\n  cache: true,\n});\n\nconst categoriesAgain = await grab("categories", {\n  cache: true,\n}); \n// Instant response from frontend cache, no server call\n'})}),"\n",(0,s.jsx)(n.h3,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Prevent user\'s multi-click cascading requests\nlet searchResults = {};\n\nasync function searchWithRateLimit(query) {\n  await grab("search", {\n    response: searchResults,\n    query: query,\n    rateLimit: 2, // Wait 2 seconds between requests\n  });\n}\nsearchWithRateLimit("python"); // Executes immediately\nsearchWithRateLimit("golang"); // fails, needs to wait\n'})}),"\n",(0,s.jsx)(n.h3,{id:"duplicate-cancellation",children:"Duplicate Cancellation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'let currentSearch = {};\n\nasync function searchProducts(query) {\n  // Cancel previous search when new one starts\n  await grab("products/search", {\n    response: currentSearch,\n    query: query,\n    cancelOngoingIfNew: true, // Default behavior\n  });\n}\n\n// Prevent new requests if one is ongoing\nasync function preventDuplicateRequests(userId) {\n  await grab(`users/${userId}`, {\n    cancelNewIfOngoing: true, // Prevents duplicate requests\n  });\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"error-handling-and-retry",children:"Error Handling and Retry"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'let apiData = {};\n\n// Automatic retry on failure\nawait grab("unreliable-endpoint", {\n  response: apiData,\n  retryAttempts: 3, // Retry 3 times on failure\n  timeout: 10, // 10 second timeout\n});\n\n// Manual error handling\ntry {\n  const result = await grab("api/data");\n  console.log("Success:", result);\n} catch (error) {\n  if (error.message.includes("timeout")) {\n    console.log("Request timed out");\n  } else if (error.message.includes("rate limit")) {\n    console.log("Too many requests");\n  } else {\n    console.log("Other error:", error.message);\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"request-hooks-and-interceptors",children:"Request Hooks and Interceptors"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Global request interceptor\ngrab.defaults.onRequest = (path, response, params, fetchParams) => {\n  // Add authentication header\n  fetchParams.headers.Authorization = `Bearer ervv0sf9vs0v0sv`;\n\n  // Modify request data\n  if (params.userId) {\n    params.user_id = '2525';\n  }\n\n  return [path, response, params, fetchParams];\n};\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"proxy",children:"Proxy"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'//polyfill fetch with node-fetch\nimport fetch, { Headers, Request, Response } from \'node-fetch\';\n\nif (!globalThis.fetch) {\n  globalThis.fetch = fetch;\n  globalThis.Headers = Headers;\n  globalThis.Request = Request;\n  globalThis.Response = Response;\n}\n\n//get proxy\nimport { HttpsProxyAgent } from "https-proxy-agent";\nconst agent = new HttpsProxyAgent("http://username:password@proxyhost:port");\n\nlet res = await grab("/path", { agent });\n'})}),"\n",(0,s.jsx)(n.h3,{id:"file-upload",children:"File Upload"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const formData = new FormData();\nformData.append("file", file);\n\nconst response = await grab("/api/upload", {\n  post: true,\n  body: formData,\n  headers: {\n    Authorization: `Bearer ${getAuthToken()}`,\n  },\n});\n\n// Alternative: Convert file to base64 for JSON API\nasync function uploadFileAsJSON(file) {\n  const base64 = await fileToBase64(file);\n\n  return await grab("files/upload", {\n    post: true,\n    filename: file.name,\n    content: base64,\n    mimeType: file.type,\n  });\n}\n\nfunction fileToBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.split(",")[1]);\n    reader.onerror = (error) => reject(error);\n  });\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"command-line-usage-examples",children:"Command Line Usage Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'## install for CLi testing of your APIs\nnpm i -g grab.api.js\n\n# use "grab" if installed or "npx grab-api.js" if not\ngrab https://api.example.com/download\n\n# Basic request, no flag\nnpx grab-api.js https://api.example.com/download\n\n# Request with params\nnpx grab-api.js https://api.example.com/download id=123 name=John\n\n# Request with JSON payload\nnpx grab-api.js https://api.example.com/download \'{"id":123,"name":"John"}\'\n\n# Request with --x flag (just executes once, no watching)\n# - **`--x` or `-x` flag**: Simply executes the request/download once and exits\u2014no file watching.\nnpx grab-api.js https://api.example.com/download --x\n\n# Request with params and --x flag\nnpx grab-api.js https://api.example.com/download id=123 name=John --x\n'})}),"\n",(0,s.jsx)(n.h3,{id:"mock-server-for-testing",children:"Mock Server for Testing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Setup mock responses for testing\ngrab.mock.users = {\n  response: [\n    { id: 1, name: "John Doe", email: "john@example.com" },\n    { id: 2, name: "Jane Smith", email: "jane@example.com" },\n  ],\n  delay: 1, // 1 second delay to simulate network\n};\n\ngrab.mock["products/search"] = {\n  response: (params) => ({\n    results: [\n      { id: 1, name: `Product matching "${params.query}"`, price: 29.99 },\n      { id: 2, name: `Another product for "${params.query}"`, price: 19.99 },\n    ],\n    total: 2,\n  }),\n  post: true,\n  delay: 0.5,\n};\n\n// Now your API calls will use mock data\nconst users = await grab("users"); // Returns mock user data\n\n// Mock with conditional responses\ngrab.mock["auth/login"] = {\n  response: (params) => {\n    if (\n      params.email === "admin@example.com" &&\n      params.password === "admin123"\n    ) {\n      return {\n        success: true,\n        token: "mock-jwt-token-12345",\n        user: { id: 1, name: "Admin User", role: "admin" },\n      };\n    } else {\n      return {\n        success: false,\n        error: "Invalid credentials",\n      };\n    }\n  },\n  post: true,\n  delay: 1,\n};\n\n// Error simulation\ngrab.mock["users/create"] = {\n  response: (params) => {\n    if (!params.email) {\n      throw new Error("Email is required");\n    }\n    return { id: Date.now(), ...params, created: true };\n  },\n  post: true,\n};\n'})}),"\n",(0,s.jsx)(n.h3,{id:"unit-tests-with-jest",children:"Unit Tests with Jest"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// setup-tests.js\nimport grab from "grab-api.js";\n\n// Setup global mocks for testing\nbeforeEach(() => {\n  // Clear previous mocks\n  grab.mock = {};\n  grab.log = [];\n});\n\n// user.test.js\nimport grab from "grab-api.js";\n\ndescribe("User API", () => {\n  test("should fetch user data", async () => {\n    // Setup mock\n    grab.mock.users = {\n      response: { id: 1, name: "Test User", email: "test@example.com" },\n    };\n\n    const result = await grab("users");\n\n    expect(result.id).toBe(1);\n    expect(result.name).toBe("Test User");\n  });\n\n  test("should handle user creation", async () => {\n    grab.mock.users = {\n      response: (params) => ({\n        id: 123,\n        ...params,\n        created: true,\n      }),\n      post: true,\n    };\n\n    const newUser = await grab("users", {\n      post: true,\n      name: "John Doe",\n      email: "john@example.com",\n    });\n\n    expect(newUser.name).toBe("John Doe");\n    expect(newUser.created).toBe(true);\n  });\n\n  test("should handle errors", async () => {\n    grab.mock.users = {\n      response: () => {\n        throw new Error("User not found");\n      },\n    };\n\n    const result = await grab("users");\n    expect(result.error).toBe("User not found");\n  });\n});\n'})})]})}function T(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(k,{...e})}):k(e)}}}]);