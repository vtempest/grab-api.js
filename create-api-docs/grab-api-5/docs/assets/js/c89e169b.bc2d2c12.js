"use strict";(self.webpackChunkdocusaurus_openapi_typedoc=self.webpackChunkdocusaurus_openapi_typedoc||[]).push([[24],{1594:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>N,contentTitle:()=>I,default:()=>P,frontMatter:()=>T,metadata:()=>a,toc:()=>A});const a=JSON.parse('{"id":"guide/Examples","title":"Request Stategies","description":"Install & Import","source":"@site/docs/guide/Examples.md","sourceDirName":"guide","slug":"/guide/Examples","permalink":"/guide/Examples","draft":false,"unlisted":false,"editUrl":"https://github.com/vtempest/grab-api.js/blob/main/docs/guide/Examples.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Request Stategies","sidebar_position":1},"sidebar":"default","next":{"title":"Comparisons","permalink":"/guide/Comparisons"}}');var t=r(3420),s=r(8453),i=r(6672),o=r(3526),l=r(1374),c=r(5291),u=r(4878),d=r(4595),p=r(8288),h=r(2106);function m(e){var n,r;return null!=(n=null==(r=i.Children.toArray(e).filter((function(e){return"\n"!==e})).map((function(e){if(!e||(0,i.isValidElement)(e)&&((n=e.props)&&"object"==typeof n&&"value"in n))return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:r.filter(Boolean))?n:[]}function g(e){var n=e.values,r=e.children;return(0,i.useMemo)((function(){var e=null!=n?n:function(e){return m(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}(r);return function(e){var n=(0,p.XI)(e,(function(e,n){return e.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,r])}function f(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function v(e){var n=e.queryString,r=void 0!==n&&n,a=e.groupId,t=(0,c.W6)(),s=function(e){var n=e.queryString,r=void 0!==n&&n,a=e.groupId;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:r,groupId:a});return[(0,d.aZ)(s),(0,i.useCallback)((function(e){if(s){var n=new URLSearchParams(t.location.search);n.set(s,e),t.replace(Object.assign({},t.location,{search:n.toString()}))}}),[s,t])]}function b(e){var n,r,a,t,s=e.defaultValue,o=e.queryString,l=void 0!==o&&o,c=e.groupId,d=g(e),p=(0,i.useState)((function(){return function(e){var n,r=e.defaultValue,a=e.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!f({value:r,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+r+'" but none of its children has the corresponding value. Available values are: '+a.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return r}var t=null!=(n=a.find((function(e){return e.default})))?n:a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:s,tabValues:d})})),m=p[0],b=p[1],j=v({queryString:l,groupId:c}),y=j[0],x=j[1],w=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:c}.groupId),r=(0,h.Dv)(n),a=r[0],t=r[1],[a,(0,i.useCallback)((function(e){n&&t.set(e)}),[n,t])]),q=w[0],R=w[1],S=function(){var e=null!=y?y:q;return f({value:e,tabValues:d})?e:null}();return(0,u.A)((function(){S&&b(S)}),[S]),{selectedValue:m,selectValue:(0,i.useCallback)((function(e){if(!f({value:e,tabValues:d}))throw new Error("Can't select invalid tab value="+e);b(e),x(e),R(e)}),[x,R,d]),tabValues:d}}var j=r(9110);const y={tabList:"tabList_fvkS",tabItem:"tabItem_uxnu"};function x(e){var n=e.className,r=e.block,a=e.selectedValue,s=e.selectValue,i=e.tabValues,c=[],u=(0,l.a_)().blockElementScrollPositionUntilNextRender,d=function(e){var n=e.currentTarget,r=c.indexOf(n),t=i[r].value;t!==a&&(u(n),s(t))},p=function(e){var n,r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var a,t=c.indexOf(e.currentTarget)+1;r=null!=(a=c[t])?a:c[0];break;case"ArrowLeft":var s,i=c.indexOf(e.currentTarget)-1;r=null!=(s=c[i])?s:c[c.length-1]}null==(n=r)||n.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":r},n),children:i.map((function(e){var n=e.value,r=e.label,s=e.attributes;return(0,t.jsx)("li",Object.assign({role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:function(e){c.push(e)},onKeyDown:p,onClick:d},s,{className:(0,o.A)("tabs__item",y.tabItem,null==s?void 0:s.className,{"tabs__item--active":a===n}),children:null!=r?r:n}),n)}))})}function w(e){var n=e.lazy,r=e.children,a=e.selectedValue,s=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){var l=s.find((function(e){return e.props.value===a}));return l?(0,i.cloneElement)(l,{className:(0,o.A)("margin-top--md",l.props.className)}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:s.map((function(e,n){return(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==a})}))})}function q(e){var n=b(e);return(0,t.jsxs)("div",{className:(0,o.A)("tabs-container",y.tabList),children:[(0,t.jsx)(x,Object.assign({},n,e)),(0,t.jsx)(w,Object.assign({},n,e))]})}function R(e){var n=(0,j.A)();return(0,t.jsx)(q,Object.assign({},e,{children:m(e.children)}),String(n))}const S={tabItem:"tabItem_T3ZT"};function k(e){var n=e.children,r=e.hidden,a=e.className;return(0,t.jsx)("div",{role:"tabpanel",className:(0,o.A)(S.tabItem,a),hidden:r,children:n})}r(1640);const T={title:"Request Stategies",sidebar_position:1},I=void 0,N={},A=[{value:"Install &amp; Import",id:"install--import",level:3},{value:"Basic Request",id:"basic-request",level:3},{value:"Reactive Loading Status",id:"reactive-loading-status",level:3},{value:"Global Defaults Configuration",id:"global-defaults-configuration",level:3},{value:"Instance with Separate Defaults",id:"instance-with-separate-defaults",level:3},{value:"TypeScript ToolTips &amp; Error Check on Request &amp; Response",id:"typescript-tooltips--error-check-on-request--response",level:3},{value:"Pagination with Infinite Scroll",id:"pagination-with-infinite-scroll",level:3},{value:"Debounced Search",id:"debounced-search",level:3},{value:"Client Cache in User Memory",id:"client-cache-in-user-memory",level:3},{value:"Rate Limiting",id:"rate-limiting",level:3},{value:"Duplicate Cancellation",id:"duplicate-cancellation",level:3},{value:"Error Handling and Retry",id:"error-handling-and-retry",level:3},{value:"Request Hooks and Interceptors",id:"request-hooks-and-interceptors",level:3},{value:"Proxy",id:"proxy",level:3},{value:"File Upload",id:"file-upload",level:3},{value:"Mock Server for Testing",id:"mock-server-for-testing",level:3},{value:"Unit Tests with Jest",id:"unit-tests-with-jest",level:3}];function D(e){const n={code:"code",h3:"h3",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"install--import",children:"Install & Import"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install grab-api.js\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"bun i grab-api.js\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'import grab from "grab-api.js";\n'})}),"\n",(0,t.jsx)(n.h3,{id:"basic-request",children:"Basic Request"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'// Basic GET request\ngrab("user").then(log); // { id: 123, name: "John Doe", ... }\n\n// GET with query parameters\nconst searchResults = await grab("search", {\n  query: "javascript",\n  page: 1,\n  limit: 10,\n});\n\n// POST with body\nawait grab("users", {\n  post: true, //shorthand for method: "POST"\n  email: "jane@example.com",\n  age: 25,\n});\n'})}),"\n",(0,t.jsx)(n.h3,{id:"reactive-loading-status",children:"Reactive Loading Status"}),"\n",(0,t.jsxs)(R,{children:[(0,t.jsx)(k,{value:"react",label:"React",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'import React, { useState } from "react";\nimport grab from "grab-api.js";\n\nfunction UserProfile() {\n  const [userState, setUserState] = useState<Partial<{ \n    name: string; \n    email: string;\n    isLoading: boolean;\n    error: string; \n  }>>({})\n\n  await grab(`user`, {\n    response: setUserState\n  });\n\n  return (\n    <div>\n      {userState.isLoading && <div>Loading...</div>}\n      {userState.error && <div>Error: {userState.error}</div>}\n      {userState && (\n        <div>\n          <h2>{userState.name}</h2>\n          <p>{userState.email}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n'})})}),(0,t.jsx)(k,{value:"svelte",label:"Svelte",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'<script>\n  import grab from \'grab-api.js\';\n\n\n  let searchResults = $state({\n    results: [],\n    isLoading: false,\n    error: null\n  });\n\n  async function searchProducts(query) {\n    await grab(\'products/search\', {\n      response: searchResults,\n      post: true,\n      query: query,\n      category: \'electronics\'\n    });\n  }\n<\/script>\n\n<input\n  type="text"\n  on:input={(e) => searchProducts(e.target.value)}\n  placeholder="Search products..."\n/>\n\n{#if searchResults.isLoading}\n  <div class="loading">Searching...</div>\n{:else if searchResults.error}\n  <div class="error">{searchResults.error}</div>\n{:else if searchResults.results}\n  <div class="results">\n    {#each searchResults.results as product}\n      <div class="product-card">\n        <h3>{product.name}</h3>\n        <p>${product.price}</p>\n      </div>\n    {/each}\n  </div>\n{/if}\n'})})}),(0,t.jsx)(k,{value:"vue3",label:"Vue 3",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'<template>\n  <div>\n    <input \n      v-model="searchTerm" \n      @input="searchUsers"\n      placeholder="Search users..."\n    />\n    <div v-if="userResults.isLoading" class="loading">\n      Loading users...\n    </div>\n    <div v-else-if="userResults.error" class="error">\n      {{ userResults.error }}\n    </div>\n    <div v-else class="user-list">\n      <div \n        v-for="user in userResults.users" \n        :key="user.id"\n        class="user-card"\n      >\n        {{ user.name }} - {{ user.email }}\n      </div>\n    </div>\n  </div>\n</template>\n<script setup>\nimport { ref, reactive } from \'vue\';\nimport grab from \'grab-api.js\';\nconst searchTerm = ref(\'\');\nconst userResults = reactive({\n  users: [],\n  isLoading: false,\n  error: null\n});\nconst searchUsers = async () => {\n  if (searchTerm.value.length < 2) return;\n  \n  await grab(\'users/search\', {\n    response: userResults,\n    query: searchTerm.value,\n    status: \'active\'\n  });\n};\n<\/script>\n'})})})]}),"\n",(0,t.jsx)(n.h3,{id:"global-defaults-configuration",children:"Global Defaults Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'// set directly\ngrab.defaults.baseURL = "https://api.myapp.com/v1";\ngrab.defaults.headers = {\n  Authorization: "Bearer your-token-here",\n};\n\n// method 2: Set defaults for all requests\ngrab("", {\n  setDefaults: true,\n  baseURL: "https://api.myapp.com/v1",\n  timeout: 30, // 30 seconds\n  debug: true,\n  rateLimit: 1, // 1 second between requests\n  cache: false,\n  cancelOngoingIfNew: true,\n  headers: {\n    Authorization: "Bearer your-token-here",\n  },\n});\n\n'})}),"\n",(0,t.jsx)(n.h3,{id:"instance-with-separate-defaults",children:"Instance with Separate Defaults"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'// separate defaults, headers, and interceptors for a third-party API\nconst grabGoogleAPI = grab.instance({\n  headers: { Authorization: "Bearer 9e9wjeffkwf0sf" },\n  baseURL: "https://api.google.com/v1/",\n  debug: true,\n});\nconst data = await grabGoogleAPI("/api/endpoint");\n\n// Options Order of Precedence: Request Call > Instance > User Globals > Package Defaults\n'})}),"\n",(0,t.jsx)(n.h3,{id:"typescript-tooltips--error-check-on-request--response",children:"TypeScript ToolTips & Error Check on Request & Response"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'type User = { \n  /** Name of the user  */ \n  name: string;\n  /** Age of the user  */ \n  age: number;\n};\n\ntype RequestParams = { \n  /** Query String  to search for */ \n  q : string;\n  /** Category of search  */\n  category?: "news" | "general";\n\n};\n\nconst result = await grab<User, RequestParams>(\'test-path\', {\n  q: " react",\n  category: "general"\n});\n\nlog(result.name)\n\n// instant error highlight and description tooltips over "category" and "name"\n\n'})}),"\n",(0,t.jsx)(n.h3,{id:"pagination-with-infinite-scroll",children:"Pagination with Infinite Scroll"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'let productList = $state({}) as {\n  products: Array<{name:string}>,\n  isLoading: boolean\n}\n\nawait grab("products", {\n  response: productList,\n  infiniteScroll: ["page", "products", ".results-container"]\n});\n\n<div class="results-container">\n  {productList.products.map(product => (\n    <div className="product-item">\n      <h3>{product.name}</h3>\n    </div>\n  ))}\n  {productList.isLoading && <div className="loading">Loading more products...</div>}\n</div>\n\n'})}),"\n",(0,t.jsx)(n.h3,{id:"debounced-search",children:"Debounced Search"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'// Utility function for debouncing\nfunction debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\n// Debounced search implementation\nconst debouncedSearch = debounce(async (query) => {\n  if (query.length < 2) return;\n\n  await grab("search", {\n    response: searchResults,\n    query: query,\n    cancelOngoingIfNew: true, // Cancel previous searches\n  });\n}, 300); // Wait 300ms after user stops typing\n\n// Usage in input handler\nfunction handleSearchInput(event) {\n  debouncedSearch(event.target.value);\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"client-cache-in-user-memory",children:"Client Cache in User Memory"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'// Enable caching for static data\nconst categories = await grab("categories", {\n  cache: true,\n});\n\nconst categoriesAgain = await grab("categories", {\n  cache: true,\n}); \n// Instant response from frontend cache, no server call\n'})}),"\n",(0,t.jsx)(n.h3,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'// Prevent user\'s multi-click cascading requests\nlet searchResults = {};\n\nasync function searchWithRateLimit(query) {\n  await grab("search", {\n    response: searchResults,\n    query: query,\n    rateLimit: 2, // Wait 2 seconds between requests\n  });\n}\nsearchWithRateLimit("python"); // Executes immediately\nsearchWithRateLimit("golang"); // fails, needs to wait\n'})}),"\n",(0,t.jsx)(n.h3,{id:"duplicate-cancellation",children:"Duplicate Cancellation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'let currentSearch = {};\n\nasync function searchProducts(query) {\n  // Cancel previous search when new one starts\n  await grab("products/search", {\n    response: currentSearch,\n    query: query,\n    cancelOngoingIfNew: true, // Default behavior\n  });\n}\n\n// Prevent new requests if one is ongoing\nasync function preventDuplicateRequests(userId) {\n  await grab(`users/${userId}`, {\n    cancelNewIfOngoing: true, // Prevents duplicate requests\n  });\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"error-handling-and-retry",children:"Error Handling and Retry"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'let apiData = {};\n\n// Automatic retry on failure\nawait grab("unreliable-endpoint", {\n  response: apiData,\n  retryAttempts: 3, // Retry 3 times on failure\n  timeout: 10, // 10 second timeout\n});\n\n// Manual error handling\ntry {\n  const result = await grab("api/data");\n  console.log("Success:", result);\n} catch (error) {\n  if (error.message.includes("timeout")) {\n    console.log("Request timed out");\n  } else if (error.message.includes("rate limit")) {\n    console.log("Too many requests");\n  } else {\n    console.log("Other error:", error.message);\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"request-hooks-and-interceptors",children:"Request Hooks and Interceptors"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// Global request interceptor\ngrab.defaults.onRequest = (path, response, params, fetchParams) => {\n  // Add authentication header\n  fetchParams.headers.Authorization = `Bearer ervv0sf9vs0v0sv`;\n\n  // Modify request data\n  if (params.userId) {\n    params.user_id = '2525';\n  }\n\n  return [path, response, params, fetchParams];\n};\n\n"})}),"\n",(0,t.jsx)(n.h3,{id:"proxy",children:"Proxy"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'//polyfill fetch with node-fetch\nimport fetch, { Headers, Request, Response } from \'node-fetch\';\n\nif (!globalThis.fetch) {\n  globalThis.fetch = fetch;\n  globalThis.Headers = Headers;\n  globalThis.Request = Request;\n  globalThis.Response = Response;\n}\n\n//get proxy\nimport { HttpsProxyAgent } from "https-proxy-agent";\nconst agent = new HttpsProxyAgent("http://username:password@proxyhost:port");\n\nlet res = await grab("/path", { agent });\n'})}),"\n",(0,t.jsx)(n.h3,{id:"file-upload",children:"File Upload"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'const formData = new FormData();\nformData.append("file", file);\n\nconst response = await grab("/api/upload", {\n  post: true,\n  body: formData,\n  headers: {\n    Authorization: `Bearer ${getAuthToken()}`,\n  },\n});\n\n// Alternative: Convert file to base64 for JSON API\nasync function uploadFileAsJSON(file) {\n  const base64 = await fileToBase64(file);\n\n  return await grab("files/upload", {\n    post: true,\n    filename: file.name,\n    content: base64,\n    mimeType: file.type,\n  });\n}\n\nfunction fileToBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.split(",")[1]);\n    reader.onerror = (error) => reject(error);\n  });\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"mock-server-for-testing",children:"Mock Server for Testing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'// Setup mock responses for testing\ngrab.mock.users = {\n  response: [\n    { id: 1, name: "John Doe", email: "john@example.com" },\n    { id: 2, name: "Jane Smith", email: "jane@example.com" },\n  ],\n  delay: 1, // 1 second delay to simulate network\n};\n\ngrab.mock["products/search"] = {\n  response: (params) => ({\n    results: [\n      { id: 1, name: `Product matching "${params.query}"`, price: 29.99 },\n      { id: 2, name: `Another product for "${params.query}"`, price: 19.99 },\n    ],\n    total: 2,\n  }),\n  post: true,\n  delay: 0.5,\n};\n\n// Now your API calls will use mock data\nconst users = await grab("users"); // Returns mock user data\n\n// Mock with conditional responses\ngrab.mock["auth/login"] = {\n  response: (params) => {\n    if (\n      params.email === "admin@example.com" &&\n      params.password === "admin123"\n    ) {\n      return {\n        success: true,\n        token: "mock-jwt-token-12345",\n        user: { id: 1, name: "Admin User", role: "admin" },\n      };\n    } else {\n      return {\n        success: false,\n        error: "Invalid credentials",\n      };\n    }\n  },\n  post: true,\n  delay: 1,\n};\n\n// Error simulation\ngrab.mock["users/create"] = {\n  response: (params) => {\n    if (!params.email) {\n      throw new Error("Email is required");\n    }\n    return { id: Date.now(), ...params, created: true };\n  },\n  post: true,\n};\n'})}),"\n",(0,t.jsx)(n.h3,{id:"unit-tests-with-jest",children:"Unit Tests with Jest"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'// setup-tests.js\nimport grab from "grab-api.js";\n\n// Setup global mocks for testing\nbeforeEach(() => {\n  // Clear previous mocks\n  grab.mock = {};\n  grab.log = [];\n});\n\n// user.test.js\nimport grab from "grab-api.js";\n\ndescribe("User API", () => {\n  test("should fetch user data", async () => {\n    // Setup mock\n    grab.mock.users = {\n      response: { id: 1, name: "Test User", email: "test@example.com" },\n    };\n\n    const result = await grab("users");\n\n    expect(result.id).toBe(1);\n    expect(result.name).toBe("Test User");\n  });\n\n  test("should handle user creation", async () => {\n    grab.mock.users = {\n      response: (params) => ({\n        id: 123,\n        ...params,\n        created: true,\n      }),\n      post: true,\n    };\n\n    const newUser = await grab("users", {\n      post: true,\n      name: "John Doe",\n      email: "john@example.com",\n    });\n\n    expect(newUser.name).toBe("John Doe");\n    expect(newUser.created).toBe(true);\n  });\n\n  test("should handle errors", async () => {\n    grab.mock.users = {\n      response: () => {\n        throw new Error("User not found");\n      },\n    };\n\n    const result = await grab("users");\n    expect(result.error).toBe("User not found");\n  });\n});\n'})})]})}function P(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(D,{...e})}):D(e)}}}]);